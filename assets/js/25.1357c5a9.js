(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{608:function(n,s,a){"use strict";a.r(s);var e=a(15),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("之前一直不懂哈希表是什么，弄懂之后才知道js里的set和map都可以实现哈希表结构。Hash map特点是一个key对应一个value，不会有重复的元素。Map储存key-value，适合用于二维数组，Set只存储key，适合用于一维数组。")]),n._v(" "),a("h2",{attrs:{id:"关联题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联题目"}},[n._v("#")]),n._v(" 关联题目：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("242 有效的字母异位词 https://leetcode-cn.com/problems/valid-anagram/")])]),n._v(" "),a("li",[a("p",[n._v("217 存在重复元素 https://leetcode-cn.com/problems/contains-duplicate/")])]),n._v(" "),a("li",[a("p",[n._v("136 只出现一次的数字 https://leetcode-cn.com/problems/single-number/")])]),n._v(" "),a("li",[a("p",[n._v("136解题思路")]),n._v(" "),a("ol",[a("li",[n._v("用Set来实现哈希表")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("/**\n* @param {number[]} nums\n* @return {number}\n*/\nvar singleNumber = function(nums) {\n    let list = new Set();\n    for(let i = 0;i<nums.length;i++){\n        if(!list.has(nums[i])){\n            list.add(nums[i])\n        }else{\n            list.delete(nums[i])\n        }\n    }\n    return list.values().next().value;\n};\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br")])])]),n._v(" "),a("li",[a("p",[n._v("242解题思路")]),n._v(" "),a("ol",[a("li",[n._v("转换成数组，排序后恢复成字符串，然后判断两个字符串是否全等")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    /**\n     * @param {string} s\n     * @param {string} t\n     * @return {boolean}\n     */\n    var isAnagram = function(s, t) {\n        return s.split('').sort().join('') === t.split('').sort().join('')\n    }\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])])]),n._v(" "),a("li",[a("p",[n._v("217解题思路")]),n._v(" "),a("ol",[a("li",[a("p",[n._v("利用ES6中"),a("strong",[n._v("Set没有重复key")]),n._v("的特性")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("用set和array的长度进行比较")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("/**\n\n    * @param {number[]} nums\n    \n    * @return {boolean}\n    \n*/\n    \n    var containsDuplicate = function(nums) {\n    \n        let filterlist =new Set(nums);\n    \n        return (filterlist.size === nums.length ? false:true);\n    \n    };\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br")])])]),n._v(" "),a("li",[a("p",[n._v("我的return语句有点啰嗦，看了一下评论区，因为题目是存在重复的话返回true，所以比起===应该用！==来判断，这样就不需要调换true和false的位置。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var containsDuplicate = function(nums) {\n\n    return (new Set(nums).size) !== nums.length\n\n};\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])])]),n._v(" "),a("li",[a("p",[n._v("把set转换成array再进行比较，似乎跟上面的方法大差不差，但更好理解")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    /**\n    * @param {number[]} nums\n    * @return {boolean}\n    */\n    \n    var containsDuplicate = function(nums) {\n    \n        let filterlist =[...new Set(nums)];\n    \n        return filterlist.length !== nums.length;\n    \n    };\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])])])])]),n._v(" "),a("li",[a("p",[n._v("用遍历暴力破解，因为循环条件是我的弱项，所以还是来写一下。\n思路是创建一个空数组，遍历原数组，把第一次取到的值作为key存到空数组里，在接下来的遍历中，比较取到的值是否为已存在的key，如果发现key已存在的话结束遍历，否则遍历直到尾部。这个方法显然耗时是比较长的。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v(" ``` \n /**\n     * @param {number[]} nums\n     * @return {boolean}\n     */\n     var containsDuplicate = function(nums) {\n         let newArr = [];\n         for(let i = 0;i<nums.length;i++){\n             if(newArr[nums[i]]){\n                 return true;\n             }else{\n                 newArr[nums[i]] = true\n             }\n         }\n         return false;\n     };\n\n ```\n")])])])])]),n._v(" "),a("h2",{attrs:{id:"知识点总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点总结"}},[n._v("#")]),n._v(" 知识点总结")]),n._v(" "),a("ol",[a("li",[n._v("Map和Set方法和属性的不同之处")])])])])])}),[],!1,null,null,null);s.default=t.exports}}]);